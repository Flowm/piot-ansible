---
- name: Check if myconf folder exists
  stat:
    path: "{{ base_myconf_remote }}"
  register: base_myconf_folder

- name: Copy myconf
  synchronize:
    src: "{{ base_myconf_local }}/"
    dest: "{{ base_myconf_remote }}"
    mode: push
    recursive: yes
    #rsync_path: rsync # Workaround for user with sudo password
  when: not base_myconf_folder.stat.exists

- name: Fix owner
  file:
    path: "{{ base_myconf_remote }}"
    state: directory
    recurse: yes
    owner: "{{ base_user.name }}"
    group: "{{ base_user.name }}"
  when: not base_myconf_folder.stat.exists

- name: Reset repository
  shell: "git reset --hard origin/master"
  args:
    chdir: "{{ base_myconf_remote }}"
  become: yes
  become_user: "{{ base_user.name }}"
  when: not base_myconf_folder.stat.exists

- name: Install myconf
  shell: "bash {{ base_myconf_remote }}/bin/myc -i"
  args:
    creates: "/home/{{ base_user.name }}/.oh-my-zsh"
  become: yes
  become_user: "{{ base_user.name }}"
  when: not base_myconf_folder.stat.exists
