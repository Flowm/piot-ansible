---
- name: Update package cache
  apt:
    cache_valid_time: 36000

- name: Install prerequisites
  apt:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - apt-transport-https
      - dirmngr
      - python3-pip
      - software-properties-common

- block:
  - name: Import Docker GPG signing key (old)
    apt_key:
      url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
      state: present
  - name: Add docker repository
    apt_repository:
      repo: "deb https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release | lower }} stable"
      state: present
      update_cache: yes
  when: (ansible_distribution == "Debian" and ansible_distribution_major_version|int < 11) or
        (ansible_distribution == "Ubuntu" and ansible_distribution_major_version|int < 21)

- block:
  - name: Import Docker GPG signing key
    get_url:
      url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
      dest: /usr/share/keyrings/docker-debian-packages.key
  - name: Add docker repository
    apt_repository:
      repo: "deb [signed-by=/usr/share/keyrings/docker-debian-packages.key] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release | lower }} stable"
      state: present
      update_cache: yes
  when: (ansible_distribution == "Debian" and ansible_distribution_major_version|int >= 11) or
        (ansible_distribution == "Ubuntu" and ansible_distribution_major_version|int >= 21)

- name: Install docker
  apt:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - apparmor
      - docker-ce
      - docker-ce-cli
      - docker-buildx-plugin
      - docker-compose-plugin

- name: Install legacy docker compose
  block:
  # Workaround for Debian Buster "ImportError: No module named ssl_match_hostname" issue
  # https://github.com/cisagov/ansible-role-docker/pull/10
  - name: Install python-backports.ssl-match-hostname (Debian Buster)
    package:
      name: python-backports.ssl-match-hostname
    when: ansible_distribution == "Debian" and ansible_distribution_release == "buster" and ansible_python_version is version('3', 'lt')

  - name: Install latest dockerpy and docker-compose
    pip:
      name: "{{ packages }}"
      state: latest
      executable: pip3
    vars:
      packages:
        - docker
        - docker-compose
  when: docker_legacy_compose | bool

- name: Add users to docker group
  user:
    name: "{{ item }}"
    groups: "docker"
    append: yes
  loop: "{{ docker_users }}"

- name: Configure Docker daemon options
  template:
    src: "daemon.json.j2"
    dest: "/etc/docker/daemon.json"
    owner: "root"
    group: "root"
    mode: "0644"
  when: (docker_config | default([])) | length > 0
  notify: Restart docker

- name: Enable docker
  service:
    name: docker
    enabled: yes
    state: started

- name: Start containers
  docker_container:
    name: "{{ item.key }}"
    image: "{{ item.value.image }}"
    ports: "{{ item.value.ports }}"
    state: started
    restart_policy: always
    detach: yes
  with_dict: "{{ docker_containers }}"
